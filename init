#!/bin/sh

CURWDIR="$(cd $(dirname $0) && pwd)"
TITLE="背光控制"
PROGRAM_NAME="backlight-control"
CUSTOM_BIN="/system/apps/tp/bin/custom"
CUSTOM_CONFIG_FILE="$CURWDIR/custom.conf"

APPS_CONFIG_DIR="/data/conf"
LAUNCHER_CONFIG_DIR="$APPS_CONFIG_DIR/launcher/conf.d"
LAUNCHER_CONFIG_FILE="$LAUNCHER_CONFIG_DIR/$PROGRAM_NAME.conf"

ICON="appicon_backlight_normal.png"
PRESSED_ICON="appicon_backlight_pressed.png"

PID_FILE="$CURWDIR/$PROGRAM_NAME.pid"
PKILL_BIN="/usr/bin/pkill"
INSTALL_BIN="/usr/bin/install"
REMOVE="/bin/rm -f"
LUA_BIN="/system/bin/lua"
LUA_SCRIPT_PATH="/system/share/lua/5.1/tp_entry.lua"

INTERVAL="$CURWDIR/interval.conf";

usage() {
    echo "ERROR: action missing"
    echo "syntax: $0 <start|stop|restart|status|config|install|uninstall>"
    echo "example: $0 start"
}

start() {
    $CUSTOM_BIN "$CUSTOM_CONFIG_FILE" &
    [ "$!""XXX" != "XXX" ] && echo "$!" > $PID_FILE
}

stop() {
    if [ -f $PID_FILE ]; then
        $PKILL_BIN "$CUSTOM_BIN $CUSTOM_CONFIG_FILE" -F "$PID_FILE"
        $REMOVE $PID_FILE
    fi
}

install() 
{
    echo "{" > "$PROGRAM_NAME.conf"
    echo "\"name\" :  \"$TITLE\"," >> "$PROGRAM_NAME.conf"
    echo "\"icon\" : \"$CURWDIR/$ICON\"," >> "$PROGRAM_NAME.conf"
    echo "\"iconPressed\" : \"$CURWDIR/$PRESSED_ICON\"," >> "$PROGRAM_NAME.conf"
    echo "\"exec\" : \"$CURWDIR/init start\"," >> "$PROGRAM_NAME.conf"
    echo "\"msgNum\" : 4" >> "$PROGRAM_NAME.conf"
    echo "}" >> "$PROGRAM_NAME.conf"

    $INSTALL_BIN -d $LAUNCHER_CONFIG_DIR
    $INSTALL_BIN "$PROGRAM_NAME.conf" "$LAUNCHER_CONFIG_FILE"
    
    code=`basename $CURWDIR`;
    /bin/sed -ie "s/data\/apps\/backlight/data\/apps\/$code/g" $CURWDIR/custom.conf;
}

uninstall() {
    $REMOVE "$LAUNCHER_CONFIG_FILE"
}

release_backlight() {
    RC=$($LUA_BIN $LUA_SCRIPT_PATH sys_api.release_backlight)
    echo -n $RC 

    [ -f $CUSTOM_CONFIG_FILE ] && /bin/sed -ie "s/\"content\": \"屏幕长亮\"\,/\"content\": \"自动熄灭\"\,/g" $CUSTOM_CONFIG_FILE;
    pid=`ps |grep custom|grep -v grep|awk '{print $1}'`;
    kill -SIGUSR1 $pid;
}

lock_backlight() {
    RC=$($LUA_BIN $LUA_SCRIPT_PATH sys_api.lock_backlight)
    echo -n $RC 

    [ -f $CUSTOM_CONFIG_FILE ] && /bin/sed -ie "s/\"content\": \"自动熄灭\"\,/\"content\": \"屏幕长亮\"\,/g" $CUSTOM_CONFIG_FILE;
    pid=`ps |grep custom|grep -v grep|awk '{print $1}'`;
    kill -SIGUSR1 $pid;
}

backlight_on() {
    RC=$($LUA_BIN $LUA_SCRIPT_PATH sys_api.wakeup_backlight)
    echo -n $RC

    pid=`ps |grep custom|grep -v grep|awk '{print $1}'`;
    kill -SIGUSR1 $pid;
}

backlight_off() {
    echo -n '{"msg": "falilure", "code": -1}'
}

config()
{
    /bin/input-text "" "间隔时间（单位秒）" "$INTERVAL" 1 10;
    sec=`cat $INTERVAL`;
    line=`echo $sec|grep "[^0-9]"|wc -l`;
    if [ $line -eq 0 ]; then
        pid=`ps|grep blcontrol|grep -v grep|awk '{print $1}'`;
        [ "$sec" != "" ] && nvram_set 2860 BLtime $sec;
        res=$?;
        if [ $res -eq 0 ]; then
            kill $pid;
            /bin/blcontrol -t $sec -s NULL &
            return 0;
        else
            return 1;
        fi
    else
        return 1;
    fi
}

# main
if [ $# -lt 1 ]; then
    usage
    exit 255
fi

case "$1" in
    "start" )
        start;;
    "stop" )
        stop;;
    "restart" )
        start
        stop;;
    "install" )
        install;;
    "uninstall" )
        uninstall;;
    "config" )
    	config;;
    "release_backlight" )
        release_backlight;;
    "lock_backlight" )
        lock_backlight;;
    "backlight_on" )
        backlight_on;;
    "backlight_off" )
        backlight_off;;
    * )
        usage ;;
esac
